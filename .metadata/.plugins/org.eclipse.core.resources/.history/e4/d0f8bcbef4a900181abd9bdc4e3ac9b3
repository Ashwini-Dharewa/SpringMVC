package com.java.mongo.javamongodb;
	import java.util.Iterator;

import javax.management.Query;

import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.MongoClient;  
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;  
import com.mongodb.client.MongoDatabase;  
import com.mongodb.client.model.Filters;

import org.bson.Document;  
	public class JavaMongoDemo {  
	public static void main(String[] args){  
	try{  
	//---------- Connecting DataBase -------------------------//  
	MongoClient mongoClient = new MongoClient( "localhost" , 27017 );  
	//---------- Creating DataBase ---------------------------//  
	MongoDatabase db = mongoClient.getDatabase("dataList");  
	//---------- Creating Collection -------------------------//  
	MongoCollection<Document> table = db.getCollection("restaurantName");  
	
	
	FindIterable<Document> iterDoc =table.find(); 
    int i = 1;  
    Iterator it = iterDoc.iterator();   
    while (it.hasNext()) {  
       System.out.println(it.next());  
    i++;    
    }
    System.out.println("Retrieved all documents!\n\n");
    
    
    //Query2
    MongoClient mongo = new MongoClient( "localhost" , 27017 ); 
   DB db2=mongo.getDB("dataList");
   DBCollection coll = db2.getCollection("restaurantName");
   BasicDBObject allQuery = new BasicDBObject();
   BasicDBObject fields = new BasicDBObject();
   fields.put("restaurant_id", 1);
   fields.put("name", 1);
   fields.put("borough", 1);
   fields.put("cuisine", 1);  
   DBCursor cursor = coll.find(allQuery, fields);
   while (cursor.hasNext()) {
   System.out.println(cursor.next());
   }
   System.out.println("Retrieved selected fields!\n\n");
   
   
   //Query3
   MongoClient mongo1 = new MongoClient( "localhost" , 27017 ); 
   DB db3=mongo1.getDB("dataList");
   DBCollection col = db3.getCollection("restaurantName");
   BasicDBObject allQ = new BasicDBObject();
   BasicDBObject field = new BasicDBObject();
   field.put("_id", 0);
   field.put("restaurant_id", 1);
   field.put("name", 1);
   field.put("borough", 1);
   field.put("cuisine", 1);  
   DBCursor cursor1 = col.find(allQ, field);
   while (cursor1.hasNext()) {
   System.out.println(cursor1.next());
   }
   System.out.println("Retrieved without id!\n\n");
   
   //Query4
   MongoClient mongo2 = new MongoClient( "localhost" , 27017 ); 
   DB db4=mongo2.getDB("dataList");
   DBCollection col1 = db4.getCollection("restaurantName");
   BasicDBObject allQ1 = new BasicDBObject();
   BasicDBObject field1 = new BasicDBObject();
   field1.put("_id", 0);
   field1.put("restaurant_id", 1);
   field1.put("name", 1);
   field1.put("borough", 1);
   field1.put("cuisine", 1);
   field1.put("address.zipcode", 1);
   DBCursor cursor2 = col1.find(allQ1, field1);
   while (cursor2.hasNext()) {
   System.out.println(cursor2.next());
   
   }
   System.out.println("Zipcode printed");
   
   //Query5
   System.out.println("Borough=Bronx");
   FindIterable<Document> iter =table.find(Filters.eq("borough","Bronx")); 
   int i1 = 1;  
   Iterator it1 = iter.iterator();   
   while (it1.hasNext()) {  
      System.out.println(it1.next());  
   i1++;    
   }
   
   //Query6
   System.out.println("Borough=Bronx, First 5");
   FindIterable<Document> iter1 =table.find(Filters.eq("borough","Bronx")).limit(5); 
   int i2 = 1;  
   Iterator it2 = iter1.iterator();   
   while (it2.hasNext()) {  
      System.out.println(it2.next());  
   i2++;    
   }
   
 //Query7
   System.out.println("\n\nBorough=Bronx, next 5 after skipping ");
   FindIterable<Document> iter2 =table.find(Filters.eq("borough","Bronx")).limit(5).skip(5); 
   int i3 = 1;  
   Iterator it3 = iter2.iterator();   
   while (it3.hasNext()) {  
      System.out.println(it3.next());  
   i3++;    
   }
   
   //Query8
   System.out.println("Score greater than 90:");
   allQuery.put("grades.score", new BasicDBObject("$gt",90));
   DBCursor cursor8 = coll.find(allQuery);
   while(cursor8.hasNext()) {
   System.out.println(cursor8.next());
   }

   
   
   //Query9
   System.out.println("Score more than 80 and less than 100:");
   allQuery.put("grades.score", new BasicDBObject("$gt",80).append("$lt", 100));
   DBCursor cursor9 = coll.find(allQuery);
   while(cursor9.hasNext()) {
   System.out.println(cursor9.next());
   }
   
 //Quer11
   System.out.println("Score greater than 70,cuisine not American and latitude less than -65:");
   allQuery.put("grades.score", new BasicDBObject("$gt",70));
   allQuery.put("cuisine", new BasicDBObject("$ne","American"));
   allQuery.put("address.coord.0", new BasicDBObject("$lt",-65.754168));
   DBCursor cursor11 = coll.find(allQuery);
   while(cursor11.hasNext()) {
   System.out.println(cursor11.next());
   }

  
    
    
    
	}catch(Exception e){  
	System.out.println(e);  
	}  
}  
}  


